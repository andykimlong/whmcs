<?php
/*
 * @ PHP 7.2
 * @ Decoder version : 1.0.0.4
 * @ Release on : 09/06/2021
 * @ Website    : http://EasyToYou.eu
 */

echo "\n<script>\n    jQuery(document).ready(function() {\n        var authFields = {\n            '";
echo WHMCS\Mail\MailAuthHandler::AUTH_TYPE_PLAIN;
echo "': [\n                'password'\n            ],\n            '";
echo WHMCS\Mail\MailAuthHandler::AUTH_TYPE_OAUTH2;
echo "': [\n                'oauth2_callback_url',\n                'oauth2_client_id',\n                'oauth2_client_secret',\n                'oauth2_refresh_token'\n            ]\n        };\n\n        var csrfToken = '";
echo generate_token("plain");
echo "';\n\n        var serviceProviderSmtpHosts = ";
echo json_encode(WHMCS\Mail\MailAuthHandler::PROVIDER_SMTP_HOSTS);
echo ";\n        var serviceProviderSmtpPorts = ";
echo json_encode(WHMCS\Mail\MailAuthHandler::PROVIDER_SMTP_PORTS);
echo ";\n\n        var findConfigField = function (fieldName) {\n            return jQuery('#frmMailProviderConfiguration')\n                .find('input[name=\"' + fieldName + '\"],select[name=\"' + fieldName + '\"]')\n                .first();\n        };\n\n        var refreshTokenField = findConfigField('oauth2_refresh_token');\n        var refreshTokenFieldParent = refreshTokenField.parent();\n        var serviceProviderSelect = findConfigField('service_provider');\n        var authTypeSelect = findConfigField('auth_type');\n\n        refreshTokenField.attr('id', 'oauth2RefreshToken').remove();\n\n        serviceProviderSelect.attr('id', 'smtpServiceProviderSelect');\n        authTypeSelect.attr('id', 'smtpAuthTypeSelect');\n\n        refreshTokenFieldParent.append(\n            jQuery('<div class=\"input-group\">')\n                .append(\n                    refreshTokenField\n                )\n                .append(\n                    '<span class=\"input-group-btn\">'\n                    + '<button id=\"btnConfigureOauth2\" class=\"btn btn-default\" type=\"button\">'\n                    + '";
echo AdminLang::trans("global.connect");
echo "'\n                    + '</button>'\n                    + '</span>'\n                )\n        );\n\n        var applyServiceProviderSelect = function() {\n            var oauth2AuthTypeOption = authTypeSelect.find('option[value=\"";
echo WHMCS\Mail\MailAuthHandler::AUTH_TYPE_OAUTH2;
echo "\"]');\n\n            var serviceProvider = serviceProviderSelect.val();\n\n            if (serviceProvider === '";
echo WHMCS\Mail\MailAuthHandler::PROVIDER_GENERIC;
echo "') {\n                /*\n                 * We have no way of knowing how to deal with a generic SMTP provider oauth,\n                 * so the only auth type is plain.\n                 */\n                authTypeSelect.val('";
echo WHMCS\Mail\MailAuthHandler::AUTH_TYPE_PLAIN;
echo "');\n\n                oauth2AuthTypeOption.attr('disabled', 'disabled');\n\n                applyAuthTypeSelect();\n            } else {\n                oauth2AuthTypeOption.removeAttr('disabled', 'disabled');\n\n                var smtpHostField = findConfigField('host');\n                var smtpPortField = findConfigField('port');\n\n                if (!smtpHostField.val()) {\n                    smtpHostField.val(serviceProviderSmtpHosts[serviceProvider]);\n                }\n\n                if (!smtpPortField.val()) {\n                    var smtpPortValue = serviceProviderSmtpPorts[serviceProvider];\n\n                    smtpPortField.val(smtpPortValue);\n\n                    if (parseInt(smtpPortValue) === 465) {\n                        findConfigField('secure').val('ssl');\n                    } else if (parseInt(smtpPortValue) === 587) {\n                        findConfigField('secure').val('tls');\n                    }\n                }\n            }\n        };\n\n        var applyAuthTypeSelect = function() {\n            var currentAuthType = jQuery(authTypeSelect).val();\n\n            if (currentAuthType && authFields[currentAuthType]) {\n                Object.keys(authFields).forEach(function (authType) {\n                    authFields[authType].forEach(function (field) {\n                        var settingRow = findConfigField(field).parents('.mail-provider-configuration');\n\n                        if (authType === currentAuthType) {\n                            settingRow.show();\n                        } else {\n                            settingRow.hide();\n                        }\n                    });\n                });\n            }\n        };\n\n        applyServiceProviderSelect();\n        applyAuthTypeSelect();\n\n        jQuery(document).off('change', '#smtpServiceProviderSelect');\n        jQuery(document).on('change', '#smtpServiceProviderSelect', applyServiceProviderSelect);\n\n        jQuery(document).off('change', '#smtpAuthTypeSelect');\n        jQuery(document).on('change', '#smtpAuthTypeSelect', applyAuthTypeSelect);\n\n        jQuery(document).off('click', '#btnConfigureOauth2');\n        jQuery(document).on('click', '#btnConfigureOauth2', function() {\n            var errorDiv = jQuery('#mailProviderError'),\n                self = jQuery(this);\n\n            self.addClass('disabled').prop('disabled', true);\n\n            WHMCS.http.jqClient.jsonPost(\n                {\n                    url: '";
echo routePath("admin-setup-mail-provider-oauth2-get-auth-url");
echo "',\n                    data: {\n                        target: 'SmtpMail',\n                        serviceProvider: findConfigField('service_provider').val(),\n                        clientId: findConfigField('oauth2_client_id').val(),\n                        clientSecret: findConfigField('oauth2_client_secret').val(),\n                        token: csrfToken\n                    },\n                    success: function(data) {\n                        var popupOptions = {\n                            width: 500,\n                            height: 700\n                        };\n\n                        popupOptions.left = Math.round((screen.availWidth - popupOptions.width) / 2);\n                        popupOptions.top = Math.round((screen.availHeight - popupOptions.height) / 2);\n\n                        var optionsString = Object.keys(popupOptions).map(function (item) {\n                            return item + '=' + popupOptions[item];\n                        }).join(',');\n\n                        window.open(data.url, 'mailOauth2Popup', optionsString);\n\n                    },\n                    error: function(error) {\n                        errorDiv.text(error).show();\n                    },\n                    fail: function(error, xhr) {\n                        errorDiv.text(xhr.responseJSON.errorMessage).show();\n                    },\n                    always: function() {\n                        self.removeClass('disabled').prop('disabled', false);\n                    }\n                }\n            );\n        });\n\n        window.whmcsSetOauthRefreshToken = function(refreshToken) {\n            refreshTokenField.val(refreshToken);\n\n            refreshTokenField.tooltip({\n                trigger: 'click',\n                placement: 'bottom'\n            });\n\n            WHMCS.ui.toolTip.setTip(refreshTokenField, '";
echo AdminLang::trans("global.success");
echo "');\n            WHMCS.ui.toolTip.hideTip(refreshTokenField);\n        };\n    });\n</script>\n";

?>
<?php
/*
 * @ PHP 7.2
 * @ Decoder version : 1.0.0.4
 * @ Release on : 09/06/2021
 * @ Website    : http://EasyToYou.eu
 */

if (empty($data["service_provider"])) {
    $data["service_provider"] = WHMCS\Mail\MailAuthHandler::PROVIDER_GENERIC;
}
echo "\n<script>\n    jQuery(document).ready(function() {\n        var authFields = {\n            '";
echo WHMCS\Mail\MailAuthHandler::AUTH_TYPE_PLAIN;
echo "': [\n                'password'\n            ],\n            '";
echo WHMCS\Mail\MailAuthHandler::AUTH_TYPE_OAUTH2;
echo "': [\n                'oauth2_callback_url',\n                'oauth2_client_id',\n                'oauth2_client_secret',\n                'oauth2_refresh_token'\n            ]\n        };\n\n        var csrfToken = '";
echo generate_token("plain");
echo "';\n\n        var serviceProviderPopHosts = ";
echo json_encode(WHMCS\Mail\MailAuthHandler::PROVIDER_POP_HOSTS);
echo ";\n        var serviceProviderPopPorts = ";
echo json_encode(WHMCS\Mail\MailAuthHandler::PROVIDER_POP_PORTS);
echo ";\n\n        var findConfigField = function (fieldName) {\n            return jQuery('#frmDepartmentConfiguration')\n                .find('input[name=\"' + fieldName + '\"],select[name=\"' + fieldName + '\"]')\n                .first();\n        };\n\n        var successDiv = jQuery('#mailProviderTestSuccess');\n        var errorDiv = jQuery('#mailProviderError');\n\n        var refreshTokenField = findConfigField('oauth2_refresh_token');\n        var authTypeSelect = findConfigField('auth_type');\n        var serviceProviderField = findConfigField('service_provider');\n\n        authTypeSelect.attr('id', 'popAuthTypeSelect');\n\n        var displayField = function(field, display) {\n            var settingRow = jQuery(field).parents('tr');\n\n            if (display) {\n                settingRow.show();\n            } else {\n                settingRow.hide();\n            }\n        };\n\n        var applyServiceProviderSelection = function(newServiceProvider) {\n            var oauth2AuthTypeOption = authTypeSelect.find('option[value=\"oauth2\"]');\n\n            jQuery(serviceProviderField).val(newServiceProvider);\n\n            if (newServiceProvider === '";
echo WHMCS\Mail\MailAuthHandler::PROVIDER_GENERIC;
echo "') {\n                /*\n                 * We have no way of knowing how to deal with a generic POP provider oauth,\n                 * so the only auth type is plain.\n                 */\n                authTypeSelect.val('plain');\n\n                oauth2AuthTypeOption.attr('disabled', 'disabled');\n\n                applyAuthTypeSelect();\n            } else {\n                oauth2AuthTypeOption.removeAttr('disabled', 'disabled');\n                var popPortField = findConfigField('port');\n\n                if (!popPortField.val()) {\n                    var popPortValue = serviceProviderPopPorts[newServiceProvider];\n\n                    popPortField.val(popPortValue);\n                }\n            }\n\n            var popHostField = findConfigField('host');\n\n            var updateHost;\n\n            var newHostValue = newServiceProvider === '";
echo WHMCS\Mail\MailAuthHandler::PROVIDER_GENERIC;
echo "'\n                ? ''\n                : serviceProviderPopHosts[newServiceProvider];\n\n            if (!popHostField.val()) {\n                updateHost = true;\n            } else {\n                if (popHostField.val() === popHostField.data('default-value')) {\n                    updateHost = true;\n                }\n            }\n\n            if (updateHost) {\n                popHostField\n                    .val(newHostValue)\n                    .data('default-value', newHostValue);\n            }\n\n            jQuery('[data-role=\"provider-field\"]').each(function(index, field) {\n                displayField(field, false);\n            });\n\n            jQuery('[data-role=\"provider-field\"][data-provider=\"' + newServiceProvider + '\"').each(function(index, field) {\n                displayField(field, true);\n            });\n\n            jQuery('[data-role=\"not-provider-field\"]').each(function(index, field) {\n                displayField(field, true);\n            });\n\n            jQuery('[data-role=\"not-provider-field\"][data-provider=\"' + newServiceProvider + '\"').each(function(index, field) {\n                displayField(field, false);\n            });\n\n            jQuery('[data-role=\"oauth-provider-instructions\"]').hide();\n            jQuery('[data-role=\"oauth-provider-instructions\"][data-provider=\"' + newServiceProvider + '\"').show();\n        };\n\n        var applyAuthTypeSelect = function() {\n            var currentAuthType = jQuery(authTypeSelect).val();\n\n            if (currentAuthType && authFields[currentAuthType]) {\n                Object.keys(authFields).forEach(function (authType) {\n                    authFields[authType].forEach(function (field) {\n                        displayField(\n                            findConfigField(field),\n                            authType === currentAuthType\n                        );\n                    });\n                });\n            }\n\n            jQuery('[data-role=\"auth-type-element\"]').hide();\n            jQuery('[data-role=\"auth-type-element\"][data-auth-type=\"' + currentAuthType + '\"]').show();\n\n            if (currentAuthType === '";
echo WHMCS\Mail\MailAuthHandler::AUTH_TYPE_OAUTH2;
echo "') {\n                if (!jQuery(refreshTokenField).val()) {\n                    jQuery('#btnTestMailConnection').attr('disabled', 'disabled');\n                }\n\n                jQuery('#colMailSetup')\n                    .removeClass('col-lg-12')\n                    .addClass('col-md-8 col-lg-9');\n\n                jQuery('#colOauthHelp').show();\n            } else {\n                jQuery('#btnTestMailConnection').removeAttr('disabled');\n\n                jQuery('#colMailSetup')\n                    .removeClass('col-md-8 col-lg-9')\n                    .addClass('col-lg-12');\n\n                jQuery('#colOauthHelp').hide();\n            }\n        };\n\n        applyServiceProviderSelection('";
echo $data["service_provider"];
echo "');\n        applyAuthTypeSelect();\n\n        jQuery(document).on(\n            'click',\n            'a[data-role=\"provider-switch\"]',\n            function(e) {\n                e.preventDefault();\n\n                jQuery('#providerSelectGroup').find('li[role=\"presentation\"]').removeClass('active');\n                jQuery(this).parent('li[role=\"presentation\"]').addClass('active');\n                applyServiceProviderSelection(jQuery(this).data('provider'));\n\n                return false;\n            }\n        );\n\n        jQuery(document).off('change', '#popAuthTypeSelect');\n        jQuery(document).on('change', '#popAuthTypeSelect', applyAuthTypeSelect);\n\n        jQuery(document).off('click', '#btnConfigureOauth2');\n        jQuery(document).on('click', '#btnConfigureOauth2', function() {\n            var self = jQuery(this);\n\n            self.addClass('disabled').prop('disabled', true);\n\n            jQuery(successDiv).slideUp();\n            jQuery(errorDiv).slideUp();\n\n            WHMCS.http.jqClient.jsonPost(\n                {\n                    url: '";
echo routePath("admin-setup-support-oauth2-get-auth-url");
echo "',\n                    data: {\n                        target: 'SupportDepartment',\n                        serviceProvider: jQuery(serviceProviderField).val(),\n                        supportDepartmentId: ";
$data["departmentId"] ? exit : 0;

?>
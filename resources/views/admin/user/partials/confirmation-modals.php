<?php
/*
 * @ PHP 7.2
 * @ Decoder version : 1.0.0.4
 * @ Release on : 09/06/2021
 * @ Website    : http://EasyToYou.eu
 */

echo "    <script>\n        var userId = 0,\n            inviteId = 0;\n        jQuery(document).ready(function () {\n            WHMCS.form.register();\n\n            window.validateUser = function () {\n                var frm = jQuery('#frmUserSearch'),\n                    permissionsInputs = jQuery('input[name=\"permission[]'),\n                    requirePermissions = true;\n                    \n                if (!frm.length || !frm.is(':visible')) {\n                    return true;\n                }\n\n                frm.find('.form-group').removeClass('has-error');\n                frm.find('.field-error-msg').hide();\n\n                var userInput = jQuery('#selectUser'),\n                    complete = true;\n\n                if (permissionsInputs.length && requirePermissions) {\n                    var checkedPermissions = jQuery('input[name=\"permission[]\"]:checked');\n                    if (!checkedPermissions.length) {\n                        jQuery('input[name=\"permission[]\"]').showInputError();\n                        complete = false;\n                    }\n                }\n\n                if (!userInput.val()) {\n                    userInput.showInputError();\n                    complete = false;\n                }\n\n                return complete;\n            };\n\n            window.validateManage = function () {\n                var frm = jQuery('#frmManageUser'),\n                    inputs = frm.find('input[type=\"text\"]'),\n                    permissionsInputs = jQuery('input[name=\"permission[]'),\n                    makeOwner = jQuery('#inputMakeOwner'),\n                    requirePermissions = true,\n                    complete = true;\n\n                if (!frm.length || !frm.is(':visible')) {\n                    return true;\n                }\n\n                frm.find('.form-group').removeClass('has-error');\n                frm.find('.field-error-msg').hide();\n\n                if (makeOwner.length && makeOwner.is(':checked')) {\n                    requirePermissions = false;\n                }\n\n                if (permissionsInputs.length && requirePermissions) {\n                    var checkedPermissions = jQuery('input[name=\"permission[]\"]:checked');\n                    if (!checkedPermissions.length) {\n                        jQuery('input[name=\"permission[]\"]').showInputError();\n                        complete = false;\n                    }\n                }\n                inputs.each(function() {\n                    if (jQuery(this).val() === '') {\n                        jQuery(this).showInputError();\n                        complete = false;\n                    }\n                });\n                return complete;\n            };\n\n            window.afterAdd = function(data, modalForm) {\n                var pendingInviteRow = jQuery('#rowPendingInvites');\n                if (data.errorMsg || modalForm.attr('id') !== 'frmUserSearch') {\n                    return;\n                }\n\n                if (typeof data.invite !== 'undefined') {\n                    var copyRow = jQuery('#emptyInviteRow'),\n                        clone = copyRow.clone();\n\n                    clone.removeClass('empty-row');\n                    clone.prop('id', '');\n                    clone.find('span.email').text(data.email);\n                    clone.find('span.invite-sent').text(data.inviteSent);\n                    if (clone.find('td.remove').length) {\n                        clone.find('button').attr('data-invite-id', data.inviteId);\n                    }\n                    if (pendingInviteRow.hasClass('hidden')) {\n                        pendingInviteRow.removeClass('hidden');\n                    }\n                    clone.appendTo(jQuery('#userTable'));\n                } else {\n                    var copyRow = jQuery('#emptyRow'),\n                        clone = copyRow.clone();\n                    clone.removeClass('empty-row');\n                    clone.prop('id', '');\n                    clone.find('span.name').text(data.name);\n                    clone.find('span.email').text(data.email);\n                    clone.find('td.last-login-time').text(data.lastLoginTime);\n                    if (clone.find('td.remove').length) {\n                        if (clone.find('button.btn-remove').length) {\n                            clone.find('button.btn-remove').attr('data-user-id', data.userId);\n                            clone.find('button.btn-permissions')\n                                .attr('href', data.manageUserUrl)\n                                .attr('data-modal-title', data.manageUserTitle);\n                        }\n                        if (clone.find('a.btn-sq').length) {\n                            if (data.securityQuestionUrl) {\n                                clone.find('a.btn-sq')\n                                    .prop('href', data.securityQuestionUrl);\n                            } else {\n                                clone.find('a.btn-sq').addClass('disabled').prop('disabled', true);\n                            }\n                        }\n\n                    }\n                    clone.insertBefore(pendingInviteRow);\n                }\n\n                jQuery.growl.notice(\n                    {\n                        title: '',\n                        message: data.message\n                    }\n                );\n            }\n\n            addAjaxModalSubmitEvents('validateUser');\n            addAjaxModalSubmitEvents('validateManage');\n            addAjaxModalPostSubmitEvents('afterAdd');\n\n            jQuery(document).on('click', 'a.btn-reset', function() {\n                userId = jQuery(this).data('user-id');\n                jQuery('#doPasswordReset').modal('show');\n                jQuery(this).closest('.btn-group').find('button.dropdown-toggle').dropdown('toggle');\n                return false;\n            }).on('click', '#doPasswordReset-ok', function(e) {\n                e.preventDefault();\n                WHMCS.http.jqClient.jsonPost({\n                    url: WHMCS.adminUtils.getAdminRouteUrl(\n                        '/user/' + userId + '/password/reset'\n                    ),\n                    data: {\n                        token: csrfToken,\n                        id: userId\n                    },\n                    success: function() {\n                        jQuery.growl.notice(\n                            {\n                                title: '',\n                                message: '";
echo escape(AdminLang::trans("user.passwordResetSuccess"));
echo "'\n                            }\n                        );\n                    },\n                    warning: function(message) {\n                        jQuery.growl.warning(\n                            {\n                                title: '',\n                                message: message\n                            }\n                        );\n                    },\n                    always: function() {\n                        jQuery('#doPasswordReset').modal('hide');\n                    }\n                });\n            }).on('click', 'button.btn-remove', function() {\n                userId = jQuery(this).data('user-id');\n                var li = jQuery('a.btn-remove[data-user-id=\"' + userId + '\"]').closest('li');\n                if (!li.hasClass('disabled')) {\n                    jQuery('#doRemove').modal('show');\n                }\n                return false;\n            }).on('click', '#doRemove-ok', function(e) {\n                e.preventDefault();\n                var button = jQuery('button.btn-remove[data-user-id=\"' + userId + '\"]');\n                if (button.hasClass('disabled')) {\n                    return;\n                }\n                WHMCS.http.jqClient.jsonPost({\n                    url: '";
echo routePath("admin-client-user-remove-association", $client->id);
echo "',\n                    data: {\n                        token: csrfToken,\n                        id: userId\n                    },\n                    success: function (response) {\n                        button.closest('tr').remove();\n                        jQuery.growl.notice(\n                            {\n                                title: '',\n                                message: '";
echo escape(AdminLang::trans("user.associationRemoved"));
echo "'\n                            }\n                        );\n                    },\n                    warning: function(message) {\n                        jQuery.growl.warning(\n                            {\n                                title: '',\n                                message: message\n                            }\n                        );\n                    },\n                    always: function() {\n                        jQuery('#doRemove').modal('hide');\n                    }\n                });\n            }).on('change', '#selectUser', function() {\n                var value = jQuery(this).val(),\n                    sendInvite = jQuery('#checkSendInvite');\n                if (isNaN(parseInt(value))) {\n                    sendInvite.bootstrapSwitch('state', true);\n                    sendInvite.bootstrapSwitch('readonly', true, true);\n                } else {\n                    sendInvite.bootstrapSwitch('readonly', false, true);\n                }\n            }).on('click', 'button.btn-cancel', function() {\n                inviteId = jQuery(this).data('invite-id');\n                jQuery('#doCancelInvite').modal('show');\n            }).on('click', '#doCancelInvite-ok', function(e) {\n                e.preventDefault();\n                var btn = jQuery('tr.invite-item').find('button.btn-cancel[data-invite-id=\"' + inviteId + '\"]');\n                if (btn.hasClass('disabled')) {\n                    return;\n                }\n                var tr = btn.closest('tr');\n                WHMCS.http.jqClient.jsonPost({\n                    url: '";
echo routePath("admin-client-user-invite-cancel", $client->id);
echo "',\n                    data: {\n                        token: csrfToken,\n                        id: inviteId\n                    },\n                    success: function (response) {\n                        var table = btn.closest('table');\n                        tr.remove();\n                        if (table.find('tr.invite-item').length === 0) {\n                            jQuery('#rowPendingInvites').addClass('hidden');\n                        }\n                        jQuery.growl.notice(\n                            {\n                                title: '',\n                                message: '";
echo escape(AdminLang::trans("user.invites.cancelled"));
echo "'\n                            }\n                        );\n                    },\n                    warning: function(message) {\n                        jQuery.growl.warning(\n                            {\n                                title: '',\n                                message: message\n                            }\n                        );\n                    },\n                    always: function() {\n                        jQuery('#doCancelInvite').modal('hide');\n                    }\n                });\n            }).on('click', 'button.btn-resend', function() {\n                inviteId = jQuery(this).data('invite-id');\n                jQuery('#doResendInvite').modal('show');\n            }).on('click', '#doResendInvite-ok', function(e) {\n                e.preventDefault();\n                var btn = jQuery('button.btn-resend[data-invite-id=\"' + inviteId + '\"]');\n                if (btn.hasClass('disabled')) {\n                    return;\n                }\n                WHMCS.http.jqClient.jsonPost({\n                    url: '";
echo routePath("admin-client-user-invite-resend", $client->id);
echo "',\n                    data: {\n                        token: csrfToken,\n                        id: inviteId\n                    },\n                    success: function (response) {\n                        jQuery.growl.notice(\n                            {\n                                title: '',\n                                message: '";
echo escape(AdminLang::trans("user.invites.resent"));
echo "'\n                            }\n                        );\n                    },\n                    warning: function(message) {\n                        jQuery.growl.warning(\n                            {\n                                title: '',\n                                message: message\n                            }\n                        );\n                    },\n                    always: function() {\n                        jQuery('#doResendInvite').modal('hide');\n                    }\n                });\n            }).on('click', 'button.btn-delete-user', function() {\n                jQuery('#doRemoveUser').attr('data-backdrop', 'false');\n                deleteId = jQuery(this).data('delete-id');\n                jQuery('#doRemoveUser').on('show.bs.modal', function() {\n                    jQuery(this).css('zIndex', 1060);\n                    jQuery('.modal-backdrop.fade.in').css('zIndex', 1055);\n                }).on('hide.bs.modal', function(){\n                    jQuery('.modal-backdrop.fade.in').css('zIndex', 1040);\n                });\n                jQuery('#doRemoveUser').modal('show');\n            }).on('click', '#doRemoveUser-ok', function(e) {\n                e.preventDefault();\n                var btn = jQuery('button.btn-delete-user[data-delete-id=\"' + deleteId + '\"]');\n                if (btn.hasClass('disabled')) {\n                    return;\n                }\n                WHMCS.http.jqClient.jsonPost({\n                    url: WHMCS.adminUtils.getAdminRouteUrl(\n                        '/user/manage/' + deleteId + '/delete'\n                    ),\n                    data: {\n                        token: csrfToken,\n                        id: deleteId\n                    },\n                    success: function () {\n                        jQuery('#modalAjax').modal('hide');\n                        jQuery('a[data-user-id=\"' + deleteId + '\"]').closest('tr').remove();\n                        if (jQuery('#sortabletbl0 tr').length === 2) {\n                            jQuery('#rowNoResults').removeClass('hidden');\n                            jQuery('#rowNoResults').show();\n                        }\n                        jQuery.growl.notice(\n                            {\n                                title: '',\n                                message: '";
echo escape(AdminLang::trans("user.deleted"));
echo "'\n                            }\n                        );\n                    },\n                    warning: function(message) {\n                        jQuery.growl.warning(\n                            {\n                                title: '',\n                                message: message\n                            }\n                        );\n                    },\n                    always: function() {\n                        jQuery('#doRemoveUser').modal('hide');\n                        jQuery('.modal-backdrop.fade.in').css('zIndex', 1040);\n                    }\n                });\n            });\n        });\n    </script>\n";
echo WHMCS\View\Helper::confirmationModal("doRemove", AdminLang::trans("user.removeAssociation"));
echo WHMCS\View\Helper::confirmationModal("doCancelInvite", AdminLang::trans("user.invites.cancelQuestion"));
echo WHMCS\View\Helper::confirmationModal("doResendInvite", AdminLang::trans("user.invites.resendQuestion"));
echo WHMCS\View\Helper::confirmationModal("doPasswordReset", AdminLang::trans("user.passwordResetSure") . "<br><br>" . AdminLang::trans("user.passwordResetInfo"));
echo WHMCS\View\Helper::confirmationModal("doRemoveUser", AdminLang::trans("user.confirmDelete"));

?>